---
const { pathname } = Astro.url;
const { to } = Astro.props;

let HTMLTag = "span";
let hrefAttribute = undefined;
let ariaExpandedAttribute = undefined;

if ("submenu" in Astro.slots) {
  HTMLTag = "button";
  ariaExpandedAttribute = "false";
} else if (to !== pathname) {
  HTMLTag = "a";
  hrefAttribute = to ?? undefined;
}

const selected = pathname === to;
---

<HTMLTag
  href={hrefAttribute}
  aria-expanded={ariaExpandedAttribute}
  aria-current={selected ? "page" : undefined}
  class:list={["nav-item", { selected }]}
>
  <slot />

  <slot name="submenu" />
</HTMLTag>

<style>
  .nav-item {
    padding-block: 20px;
    display: block;

    font-size: 24px;
    line-height: normal;

    &.selected {
      text-decoration: underline;
      text-underline-offset: 10px;
    }
  }

  @media screen(lg) {
    .nav-item {
      @apply text-label-medium p-0;

      position: relative;
      display: flex;
      align-items: center;
      gap: 4px;
    }

    .nav-item:is(span, a) {
      position: relative;
      white-space: nowrap;

      &.selected,
      &:hover {
        @apply text-primary;

        text-decoration: none;
      }
    }

    .nav-item:is(span, a).selected:after,
    .nav-item:is(span, a):hover:after,
    .nav-item:is(button):not(.opened):hover:after {
      @apply bg-primary;

      content: "";
      position: absolute;
      left: -1px;
      right: -1px;
      bottom: -4px;
      height: 2px;
      border-radius: 2px;
    }
  }
</style>
