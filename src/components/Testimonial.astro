---
export interface Testimonial {
  content: string;
  company: string;
  author: string;
  contentLang?: string;
}

interface Props {
  viewMode: "block" | "inline";
  testimonial: Testimonial;
}

const { viewMode = "block", testimonial } = Astro.props;
---

{
  viewMode === "block" && (
    <bloquote class="testimonial flex flex-col gap-5 lg:gap-0 px-5 py-6 lg:p-[50px] bg-neutral4 rounded-[26px]">
      <p
        lang={testimonial.contentLang ?? undefined}
        class="text-body-medium lg:mt-[50px] mb-auto"
      >
        <span class="block mb-10 lg:mb-[40px] text-primary text-[200px] lg:text-[240px] translate-x-[-12px] translate-y-[56px] lg:translate-x-[-15px] lg:translate-y-[20px]">
          &ldquo;
        </span>
        {testimonial.content}&rdquo;
      </p>
      <footer
        lang={testimonial.contentLang ?? undefined}
        class="lg:mt-10 text-body-medium-bold"
      >
        {testimonial.author}
        <cite class="not-italic">
          <span class="text-primary">&nbsp;{testimonial.company}</span>
        </cite>
      </footer>
    </bloquote>
  )
}

{
  viewMode === "inline" && (
    <bloquote class="testimonial flex flex-col lg:flex-row gap-6 px-5 py-6 lg:p-10 bg-neutral4 rounded-[26px]">
      <div class="lg:flex-[0_0_78px] h-[47px] lg:h-[54px] overflow-hidden">
        <span class="block text-primary text-[200px] translate-x-[-12px] translate-y-[-79px]">
          &ldquo;
        </span>
      </div>
      <div class="flex flex-col gap-5">
        <p lang={testimonial.contentLang ?? undefined} class="text-body-medium">
          {testimonial.content}&rdquo;
        </p>
        <footer
          lang={testimonial.contentLang ?? undefined}
          class="text-body-medium-bold"
        >
          {testimonial.author}
          <cite>
            <span class="text-primary">&nbsp;{testimonial.company}</span>
          </cite>
        </footer>
      </div>
    </bloquote>
  )
}
