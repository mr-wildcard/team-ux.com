---
import data from "data/glossaire-design-ux/data.yaml";
import { slugify } from "scripts/helpers/slugify";
import Grid from "components/@common/Grid.astro";
import Icon from "components/@common/Icon.astro";
import ButtonCopyText from "components/ButtonCopyText/index.astro";
import Letter from "./Letter.astro";

const totalDefinitions = data.length;
const allLetters = [
  "a",
  "b",
  "c",
  "d",
  "e",
  "f",
  "g",
  "h",
  "i",
  "j",
  "k",
  "l",
  "m",
  "n",
  "o",
  "p",
  "q",
  "r",
  "s",
  "t",
  "u",
  "v",
  "w",
  "x",
  "y",
  "z",
];

const groupedDefinitions = new Map();

for (const definition of data) {
  const letter = definition.term
    .at(0)
    .toLowerCase()
    .normalize("NFD")
    .replace(/[\u0300-\u036f]/g, "");

  if (!groupedDefinitions.has(letter)) {
    groupedDefinitions.set(letter, new Set());
  }

  const letterGroup = groupedDefinitions.get(letter);

  letterGroup.add({
    term: definition.term,
    alternative: definition.alternative,
    slug: slugify(definition.term),
    content: definition.content,
  });
}

const currentPath = new URL(Astro.url.pathname, Astro.site);
---

<section>
  <div
    id="sticky-letters-nav"
    class="hidden sticky top-[83px] bg-surface1 z-1"
  >
    <div class="hidden lg:block container">
      <Grid>
        <div class="lg:col-span-full py-4 border-b border-neutral2">
          <ul class="max-2xl:-mx-1 flex flex-wrap 2xl:justify-between">
            {
              allLetters.map((letter) => {
                return (
                  <li class="sticky-letter max-2xl:m-1" data-letter={letter}>
                    <Letter
                      letter={letter}
                      hasDefinitions={groupedDefinitions.has(letter)}
                    />
                  </li>
                );
              })
            }
          </ul>
        </div>
      </Grid>
    </div>
  </div>

  <div class="container">
    <Grid>
      <div
        class="col-span-full lg:col-start-2 lg:col-span-10 flex flex-col space-y-5 mb-[50px] lg:mb-[140px]"
      >
        <h2 class="text-headline-medium text-neutral1">
          {totalDefinitions} définitions de l’UX design
        </h2>
        <ul id="letters-nav" class="hidden lg:flex lg:-mx-[3.5px] flex-wrap">
          {
            allLetters.map((letter) => {
              return (
                <li class="mx-[3.5px] pb-[15px]">
                  <Letter
                    letter={letter}
                    hasDefinitions={groupedDefinitions.has(letter)}
                  />
                </li>
              );
            })
          }
        </ul>
      </div>

      <div class="col-span-full lg:col-start-2 lg:col-span-8">
        <div class="space-y-[50px] lg:space-y-[100px]">
          {
            Array.from(groupedDefinitions.keys()).map((letter) => {
              return (
                <div data-letter-section={letter} class="letter-section">
                  <p
                    id={`letter-${letter}`}
                    class="mb-6 block text-headline-extra-large sm:text-headline-large uppercase scroll-mt-[270px] 2xl:scroll-mt-[190px]"
                  >
                    {letter}
                  </p>
                  <div class="flex flex-col space-y-5 scroll-mt-[100px] lg:scroll-mt-[190px]">
                    {Array.from(groupedDefinitions.get(letter)).map(
                      (definition) => {
                        return (
                          <div class="bg-neutral4 rounded-[26px]">
                            <details data-anchor={`#${definition.slug}`}>
                              <summary class="px-5 py-4 sm:p-8 cursor-pointer">
                                <div class="flex items-center justify-between space-x-1.5">
                                  <h3
                                    id={definition.slug}
                                    class="text-headline-small scroll-mt-[135px] lg:scroll-mt-[280px] 2xl:scroll-mt-[220px]"
                                  >
                                    <span>{definition.term}</span>&nbsp;
                                    {definition.alternative && (
                                      <>
                                        <br />
                                        {definition.alternative}
                                      </>
                                    )}
                                  </h3>
                                  <div class="flex items-center sm:space-x-1 h-[34px] px-2 sm:px-4 bg-surface5 rounded-[100px] text-label-small hover:shadow-[inset_0_0_0_1px] hover:shadow-primary focus:outline focus:outline-offset-[3px] focus:outline-[3px] focus:outline-secondary">
                                    <span class="max-sm:hidden open">
                                      Ouvrir
                                    </span>

                                    <span class="max-sm:hidden close">
                                      Fermer
                                    </span>

                                    <Icon
                                      name="expand_more"
                                      width={32}
                                      height={32}
                                    />
                                  </div>
                                </div>
                              </summary>
                              <div class="flex flex-col space-y-8 px-5 py-4 sm:px-8 sm:pb-8 pt-0">
                                <p
                                  class="text-body-medium"
                                  set:html={definition.content}
                                />

                                <ButtonCopyText
                                  type="secondary"
                                  textToCopy={`${currentPath}#${definition.slug}`}
                                  toastCopySuccessText="L’URL a été copiée dans votre presse-papiers !"
                                  class="text-left"
                                >
                                  Copier l’URL directe vers ce mot
                                </ButtonCopyText>
                              </div>
                            </details>
                          </div>
                        );
                      },
                    )}
                  </div>
                </div>
              );
            })
          }
        </div>
      </div>

      <div
        class="col-span-full lg:col-start-2 lg:col-span-7 mt-[50px] lg:mt-40"
      >
        <p class="text-body-medium">
          Nous espérons que ce glossaire vous aide à mieux comprendre ce qui se
          cache derrière le jargon de l’UX design et ses anglicismes. N’hésitez
          pas à nous contacter si vous pensez qu’une définition manque à l’appel
          ou pourrait être améliorée.
        </p>
      </div>
    </Grid>
  </div>
</section>

<style>
  #sticky-letters-nav {
    position: fixed;
    width: 100%;
  }

  .sticky-letter {
    @apply mt-2;
  }

  .sticky-letter.active :global(a) {
    @apply text-neutral4 bg-primary underline underline-offset-[4px];
  }

  details {
    & :global(svg) {
      @apply fill-primary;
    }

    :global(a) {
      @apply text-primary underline underline-offset-[4px];
    }

    &:not([open]) {
      .close {
        display: none;
      }
    }

    &[open] {
      & summary :global(svg) {
        transform: scaleY(-1);
      }

      .open {
        display: none;
      }
    }
  }
</style>

<script src="./index.ts"></script>
